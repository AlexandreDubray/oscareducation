-extends "base.haml"

-block head
  %script{type: "text/javascript", src: "{{ STATIC_URL }}js/professor_student.js"}

-block javascript
  :javascript
    $(function () {
      $('[data-toggle="popover"]').popover({
        html: true
      })

      $('.skill').each(function(index, node) {
        node.setAttribute("data-content", node.nextSibling.innerHTML);
      })
    })


-block content
  %div{ng-app: "oscar"}
    %h1
      =student.user.first_name|title
      =student.user.last_name|title

    %hr

    %ul
      %li Nom d'utilisateur:
        =student.user.username
      %li Email:
        =student.get_email

    %h2 authentification de l'élève

    %div{ng-controller: "regeneratePasswordController", ng-init: "studentId={{ student.id }}"}
      %form{ng-submit: "askForNewPassword()"}
        %p{ng-hide: "!password"}
          Nouveau mot de passe:
          %span.label.label-default
            {& password &}

        %input.btn.btn-primary{type: "submit", value: "Regenerer un nouveau mot de passe pour cet élève"}

    %h2 Suit les cours suivants:

    %ul
      -for lesson in student.lesson_set.all
        %li
          %a{href: "{% url 'professor_lesson_detail_view' lesson.pk %}"}= lesson.name

    %h2 A passé les tests suivants:

    %ul
      -for test_student in student.teststudent_set.all
        %li
          =test_student.test.name
          %span.label{class: "label-{% if test_student.get_state == 'finished' %}success{% elif test_student.get_state == 'started' %}warning{% else %}danger{% endif %}"}= test_student.get_state

    %h2
      %a{name: "skills"}
      Empreinte:

    -regroup student.skills_map by skill.level as levels

    -for level in levels
      %h5
        Niveau {{ level.grouper }}

      %table
        -for student_skill in level.list
          -if forloop.first
            <tr>
          -elif forloop.counter0|divisibleby:12
            </tr><tr>
          %td{style: "border: solid #D3D3D3 1px; width: 100px; padding: 10px; {% if student_skill.acquired %} background-color: green;{% elif student_skill.tested %} background-color: orange;{% endif %}"}
            %a.skill{type: "button", data-toggle: "popover", data-container: "body", data-placement: "bottom", tabindex: "0", data-trigger: "focus", title: "Modification de la compétence", data-content: '', style: '{% if student_skill.tested or student_skill.acquired %}color: white;{% endif %}'}
              =student_skill.skill.code
              %div{style: "display: none"}
                %center
                  %p
                    %a{href: "{% url 'professor_skill_detail_view' student_skill.skill.code %}"} Détails de la compétence
                  %p
                    %form{action: "{% url 'professor_validate_student_skill' student_skill.id %}", method: "post"}
                      -csrf_token
                      %input.btn.btn-success{type: "submit", value: "Marquer comme acquise"}
                  %p
                    %form{action: "{% url 'professor_unvalidate_student_skill' student_skill.id %}", method: "post"}
                      -csrf_token
                      %input.btn.btn-warning{type: "submit", value: "Marquer comme non-acquise"}
                  %p
                    %form{action: "{% url 'professor_default_student_skill' student_skill.id %}", method: "post"}
                      -csrf_token
                      %input.btn.btn-default{type: "submit", value: "Marquer comme inconnu"}

          -if forloop.last
            </tr>

    %br
    %br
    %br
